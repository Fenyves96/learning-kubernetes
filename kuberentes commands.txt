kubectl get namespaces

kubectl apply -f namespaces.yaml
kubectl delete -f namespaces.yaml

#set namespace for current context
kubectl config set-context --current --namespace=<namespace-name>

#list pods in development namespace
kubectl get pods -n development


#describe a pod to check pods status
kubectl describe pods/pod-info-deployment-68c8476764-hkwpr -n development

#get access to pod's shell (it means interactive terminal) (-- indicate the start of the script you want to run)
kubectl exec -it busybox-74b7c48b46-mw2hs -- /bin/sh

#list contexts
kubectl config get-contexts

#Use another context (for example tua-kubernetes)
kubectl config use-context tua-kubernetes

kubectl get pod process-controller-648c56b4bb-kwrsg -n bm-process-monitoring -o jsonpath='{.spec.containers[?(@.name=="<container-name>")].image}'

create new deployment:
kubectl create deployment --dry-run=client --image localhost:5000/explorecalifornia.com explorecalifornia.com --output=yaml > deployment.yaml

port-forward:
kubectl get pods
kubectl port-forward pod/cp-schema-registry-76676b4596-ngr6g 8081:8081 -n <namespace>
